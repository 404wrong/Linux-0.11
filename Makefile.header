# Specify the target platform (x86 or x86_64)
TARGET := x86_64
UNAME := $(shell uname)

ifeq ($(TARGET), x86_64)
	ifeq ($(UNAME), Linux)
	AS  = as --64
	LD  = ld
	LDFLAGS = -m elf_x86_64
	cc  = gcc
	CFLAGS  = -g -m64 -fno-builtin -fno-stack-protector -fomit-frame-pointer -fstrength-reduce -D__X64__ #-Wall

	CPP	= cpp -nostdinc -D__X64__
	AR	= ar
	STRIP = strip
	OBJCOPY = objcopy
	# we should use -fno-stack-protector with gcc 4.3
	gcc_version=$(shell ls -l `which gcc` | tr '-' '\n' | tail -1)
	endif
else
	ifeq ($(UNAME), Linux)
		AS	= as --32
		LD	= ld
		#LDFLAGS = -m elf_i386 -x 
		LDFLAGS = -m elf_i386
		CC	= gcc
		CFLAGS  = -g -m32 -fno-builtin -fno-stack-protector -fomit-frame-pointer -fstrength-reduce -D__X86__ #-Wall

		CPP	= cpp -nostdinc -D__X86__
		AR	= ar
		STRIP = strip
		OBJCOPY = objcopy
		# we should use -fno-stack-protector with gcc 4.3
		gcc_version=$(shell ls -l `which gcc` | tr '-' '\n' | tail -1)
	endif

	ifeq ($(UNAME), Darwin)
		AS	= i386-elf-as --32
		LD	= i386-elf-ld
		#LDFLAGS = -m elf_i386 -x 
		LDFLAGS = -m elf_i386
		#CC	= i386-elf-gcc-4.3.2
		CC	= i386-elf-gcc
		CFLAGS  = -gdwarf-2 -g3 -m32 -fno-builtin -fno-stack-protector -fomit-frame-pointer -fstrength-reduce #-Wall

		#CPP	= i386-elf-cpp-4.3.2 -nostdinc
		CPP	= i386-elf-cpp -nostdinc
		AR	=i386-elf-ar
		STRIP = i386-elf-strip
		OBJCOPY = i386-elf-objcopy
	endif
endif

